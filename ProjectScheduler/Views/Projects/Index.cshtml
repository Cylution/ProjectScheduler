<!-- strongly typed IEnumerable of type project-->
@model IEnumerable<ProjectScheduler.Models.Project>

@{
    ViewBag.Title = "Project Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()    //rem these 2 in
        @Html.ValidationSummary(true)
    <p>
        Resource: @Html.DropDownList("projectResource", "All")
        Title: @Html.TextBox("SearchString")

        @*need to do datepicker*@
        Start Date: @Html.TextBox("searchFreeStartDate")

        <br />

        @*rem need to do sorting on headers*@
        <input type="submit" value="Filter" />

    </p>
    }
 
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParam })
        </th>
        <th>
            @Html.ActionLink("Start Date", "Index", new { sortOrder = ViewBag.StartDateSortParm })
        </th>
        <th>
            @Html.ActionLink("End Date", "Index", new { sortOrder = ViewBag.EndDateSortParm })
        </th>
        <th>
            @Html.ActionLink("Project Manager", "Index", new { sortOrder = ViewBag.PmSortParam })
        </th>
        <th>
            @Html.ActionLink("Resource", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th></th>
    </tr>


@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PM)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Resource)
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
